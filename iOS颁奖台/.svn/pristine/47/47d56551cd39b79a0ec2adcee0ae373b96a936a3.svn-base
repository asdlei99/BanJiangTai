//
//  TCHeadView.m
//  XPApp
//
//  Created by 唐天成 on 16/7/7.
//  Copyright © 2016年 ShareMerge. All rights reserved.
//

#import "TCHeadView.h"
#import "XPTastStoreModel.h"
#import <ReactiveCocoa/ReactiveCocoa.h>
#import "NSString+XPRemoteImage.h"


@interface TCHeadView()
//大包中包小包大厅
@property (weak, nonatomic) IBOutlet UILabel *bigRoom;
@property (weak, nonatomic) IBOutlet UILabel *midRoom;
@property (weak, nonatomic) IBOutlet UILabel *smallRoom;
@property (weak, nonatomic) IBOutlet UILabel *mainHall;

@property (weak, nonatomic) IBOutlet NSLayoutConstraint *tagAllLabelHeightConstraint;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *dashImageBottomConstraint;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *backImageViewBottomConstraint;

//businessTag数组
//@property (weak, nonatomic) IBOutlet UILabel *tagLabel1;
//@property (weak, nonatomic) IBOutlet UILabel *tagLabel2;
//@property (weak, nonatomic) IBOutlet UILabel *tagLabel3;
//@property (weak, nonatomic) IBOutlet UILabel *tagLabel4;
//@property (weak, nonatomic) IBOutlet UILabel *tagLabel5;
//@property (weak, nonatomic) IBOutlet UILabel *tagLabel6;

//@property (strong, nonatomic) IBOutletCollection(UILabel) NSArray *tagLabels;
@property (strong, nonatomic) IBOutletCollection(UILabel) NSArray *tagLabelArray;
@end

@implementation TCHeadView

/**
 ** lineView:	   需要绘制成虚线的view
 ** lineLength:	 虚线的宽度
 ** lineSpacing:	虚线的间距
 ** lineColor:	  虚线的颜色
 **/
- (void)drawDashLine:(UIView *)lineView lineLength:(int)lineLength lineSpacing:(int)lineSpacing lineColor:(UIColor *)lineColor
{
    CAShapeLayer *shapeLayer = [CAShapeLayer layer];
    [shapeLayer setBounds:lineView.bounds];
    [shapeLayer setPosition:CGPointMake(CGRectGetWidth(lineView.frame) / 2, CGRectGetHeight(lineView.frame))];
    [shapeLayer setFillColor:[UIColor clearColor].CGColor];
    //  设置虚线颜色为blackColor
    [shapeLayer setStrokeColor:lineColor.CGColor];
    //  设置虚线宽度
    [shapeLayer setLineWidth:CGRectGetHeight(lineView.frame)];
    [shapeLayer setLineJoin:kCALineJoinRound];
    //  设置线宽，线间距
    [shapeLayer setLineDashPattern:[NSArray arrayWithObjects:[NSNumber numberWithInt:lineLength], [NSNumber numberWithInt:lineSpacing], nil]];
    //  设置路径
    CGMutablePathRef path = CGPathCreateMutable();
    CGPathMoveToPoint(path, NULL, 0, 0);
    CGPathAddLineToPoint(path, NULL, CGRectGetWidth(lineView.frame), 0);
    [shapeLayer setPath:path];
    CGPathRelease(path);
    //  把绘制好的虚线添加上来
    [lineView.layer addSublayer:shapeLayer];
}
-(void)awakeFromNib{
    [super awakeFromNib];
    NSLog(@"%@  %@",NSStringFromCGRect(self.frame),NSStringFromCGRect(self.dottedLineImageView.frame));
    [self drawDashLine:self.dottedLineImageView lineLength:6 lineSpacing:3 lineColor:[UIColor whiteColor] ];
    
//    //画虚线
//    UIGraphicsBeginImageContext(self.dottedLineImageView.frame.size);   //开始画线
//    [self.dottedLineImageView.image drawInRect:CGRectMake(0, 0, self.dottedLineImageView.frame.size.width, self.dottedLineImageView.frame.size.height)];
//    CGContextSetLineCap(UIGraphicsGetCurrentContext(), kCGLineCapRound);  //设置线条终点形状
//    
//    
//    CGFloat lengths[] = {10,5};
//    CGContextRef line = UIGraphicsGetCurrentContext();
//    CGContextSetStrokeColorWithColor(line, [UIColor redColor].CGColor);
//    
//    CGContextSetLineDash(line, 0, lengths, 2);  //画虚线
//    CGContextMoveToPoint(line, 0.0, 20.0);    //开始画线
//    CGContextAddLineToPoint(line, 310.0, 20.0);
//    CGContextStrokePath(line);
//    self.dottedLineImageView.image = UIGraphicsGetImageFromCurrentImageContext();
    
    
    for(int i =0 ;i< self.tagLabelArray.count;i++){
        UILabel* tagLabel = self.tagLabelArray[i];
        tagLabel.layer.cornerRadius=10;
        tagLabel.layer.masksToBounds =YES;
        self.layer.shouldRasterize = YES;
        self.layer.rasterizationScale = [UIScreen mainScreen].scale;
    }
    [[RACObserve(self, privateRoomModel) ignore:nil] subscribeNext:^(XPPrivateRoomModel *x) {
//        self.privateRoomModel;
        self.bigRoom.text=[NSString stringWithFormat:@"大包:%@间",x.bigRoom];
        self.midRoom.text=[NSString stringWithFormat:@"中包:%@间",x.midRoom];
        self.smallRoom.text=[NSString stringWithFormat:@"小包:%@间",x.smallRoom];
        self.mainHall.text=[NSString stringWithFormat:@"大厅:%@位",x.bigHall];
    }];
    [[RACObserve(self, storeTags)ignore:nil]subscribeNext:^(NSArray* storeTags) {
        NSInteger count = storeTags.count;
        for(int i= 0 ;i<storeTags.count;i++){
            UILabel* tagLabel =self.tagLabelArray[i];
            tagLabel.text = [NSString stringWithFormat:@"  %@  ",storeTags[i]];
        }
        for(int i = storeTags.count;i<6;i++){
            UILabel* tagLabel =self.tagLabelArray[i];
            tagLabel.hidden=YES;
        }
        if(storeTags.count >3){
            self.tagAllLabelHeightConstraint.constant=53;
            self.dashImageBottomConstraint.constant=self.dashImageBottomConstraint.constant+22;
            self.backImageViewBottomConstraint.constant=self.backImageViewBottomConstraint.constant+22;
        }else{
            self.tagAllLabelHeightConstraint.constant=31;
        }
    }];
    
    RAC(self.storeImageView, image) = [[RACObserve(self, logoString) flattenMap:^RACStream *(id value) {
        return value ? [value rac_remote_image] : [RACSignal return :nil];
    }] deliverOn:[RACScheduler mainThreadScheduler]];

}

+(instancetype)headView{
    TCHeadView* headView= [[NSBundle mainBundle] loadNibNamed:@"TCHeadView" owner:nil options:nil][0];
//    .dashImage.cornerRadius=12;//self.dashImage.height/2;
    return headView;
}
-(void)setView{
//    self.dashImage.image=[UIImage imageNamed:@"advertisement_03"];
    self.dashImage.cornerRadius=self.dashImage.height<self.dashImage.width?self.dashImage.height/2:self.dashImage.width/2;
    self.dashImage.borderWidth=2;
    self.dashImage.borderColor=[UIColor whiteColor];
}
/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
